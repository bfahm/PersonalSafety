
@{
    ViewData["Title"] = "Realtime Client";
}

<section class="pb_xl_py_cover pb_gradient_v1" style="padding:0px !important; background-image: url(assets/images/1900x1200_img_5.jpg);">
        <div class="container">
            <div class="row align-items-center justify-content-center">
                <div class="col-md-4 justify-content-center">
                    <h2 class="heading mb-5 pb_font-40">Realtime Client</h2>
                    <div class="sub-heading">
                        <p class="mb-4">Use this client to test API Requests that needs a valid established connection with the server's realtime channel.</p>
                    </div>
                </div>
                <div class="col-md-1"></div>
                <div id="start_of_form" class="col-md-7">
                    <div class="bg-white rounded pb_form_v1">
                        <h2 class="mb-4 mt-0 text-center">Login</h2>
                        <div>
                            <div class="form-group">
                                <input id="ip_token" type="text" class="form-control py-3 reverse" placeholder="Type your verified token here" required>
                            </div>

                            <div class="form-group">
                                <input id="btn_connect" type="button" class="btn btn-primary btn-lg btn-block pb_btn-pill  btn-shadow-milon" value="Connect">
                            </div>
                        </div>

                        <div id="hidden_div_till_connected" hidden>

                            <div class="pb_height-5" style="visibility:hidden"></div>
                            <hr />
                            <div class="pb_height-10" style="visibility:hidden"></div>

                            <div id="alert_container_role" class="alert alert-success alert-dismissible fade show" role="alert">
                                <strong>Current role: </strong> <samp id="samp_role">role</samp>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div id="alert_container_link_to_docs" class="alert alert-warning alert-dismissible fade show" role="alert">
                                <a id="a_scroll_to_docs" class="text-dark" style="text-decoration:none; cursor: pointer;">Documentation available below.</a>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>

                            <div>
                                <div class="form-group">
                                    <input id="result_email" type="text" class="form-control py-3 reverse" placeholder="Your Email" disabled>
                                </div>
                                <div class="input-group mb-3">
                                    <input id="result_connectionId" type="text" class="form-control py-3 reverse" style="font-family:Consolas, monospace" placeholder="Your ConnectionId" disabled>
                                    <div class="input-group-append">
                                        <button id="btn_copy_to_clipboard" class="btn btn-secondary" type="button" autocomplete="off">Copy</button>
                                    </div>
                                </div>
                                <div class="input-group mb-3">
                                    <input id="result_msg" type="text" class="form-control py-3 reverse pb_color-primary" placeholder="Messages received from the server appears here" disabled>
                                    <div class="input-group-append">
                                        <button id="btn_clear" class="btn btn-secondary" type="button" autocomplete="off">Clear</button>
                                    </div>
                                </div>

                            </div>
                            <div class="row justify-content-center align-items-center">
                                <a id="link_reconnect" href="#" class="text-danger">Reconnect</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

<section class="pb_section pb_slant-light">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 pl-md-5 pl-sm-0">
                <div class="row">
                    <div class="col">
                        <h1>Documentation</h1>
                        <p class="pb_font-18">Below is a simple introduction on how to use the Realtime Client tool, and what to expect from messages received from the server.</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <h2>General Notes</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg">
                        <div class="media pb_feature-v2 text-left mb-1 mt-1">
                            <div class="media-body">
                                <h3 class="mt-2 mb-2 heading">Connecting to the Server</h3>
                                <p class="text-sans-serif pb_font-16">Connecting to the SignalR Server Service needs a valid token (exactly the same as the one received after a successful login attempt).</p>
                                <p class="text-sans-serif pb_font-16">The server listens for connections to different Hubs on different endpoints.<br /> Currently, the available hubs to connect to are: </p>
                                <ul class="text-sans-serif pb_font-16">
                                    <li>AdminHub @@ <samp>/hubs/admin</samp></li>
                                    <li>ClientHub @@ <samp>/hubs/client</samp></li>
                                    <li>PersonnelHub @@ <samp>/hubs/personnel</samp></li>
                                </ul>
                                <p class="text-sans-serif pb_font-16">Technically speaking, these hubs inheret from the MainHub (doesn't have an endpoint). Basically, this means that the three hubs share methods like <code>GetMyConnectionInfo()</code>, in addition to being secured, requiring a valid token upon connection.<br />Note that different hubs may require specific user <strong>Roles</strong> to be granted access.</p>
                                <p class="text-sans-serif pb_font-16">After providing the token for the connection object and intiating the connection, clients are now granted access to various channels each for their own type of data exepectancy.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <h2 id="client_docs">Client Hub</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg">
                        <div class="media pb_feature-v2 text-left mb-1 mt-1">
                            <div class="media-body">
                                <h3 class="mt-2 mb-2 heading">Listening to Messages</h3>
                                <p class="text-sans-serif pb_font-16">Currently, there are just two channels for communication between the Main Server and Mobile Devices, and these are: </p>
                                <ul class="text-sans-serif pb_font-16">
                                    <li><samp>ConnectionInfoChannel</samp></li>
                                    <li><samp>ClientChannel</samp></li>
                                </ul>

                                <hr />

                                <h3 class="mt-2 mb-2 heading">Connection Info</h3>
                                <p class="text-sans-serif pb_font-16">Right after establishing a realtime connection with the server, the client is automatically sent his <code>connectionId</code> to be used in further requests.</p>
                                <p class="text-sans-serif pb_font-16">Requesting <strong>additional</strong> information about the connection is done by <strong>invoking</strong> <code>GetMyConnectionInfo()</code> method which in turn returns connection data to the "Caller", the invoker.</p>
                                <p class="text-sans-serif pb_font-16">The initial message that should be received on this channel should be a simple string, though, invoking <code>GetMyConnectionInfo()</code> returns the object in the form of JSON string that can be easily parsed to a JSON Object and extract different fields from it.</p>
                                <p class="text-sans-serif pb_font-16">Here is how a sample message is supposed to look like:</p>
                                <div class="alert alert-secondary pb_font-16">
                                    <code>
                                        {<br />
                                        &nbsp;"UserEmail":"test@test.com",<br />
                                        &nbsp;"ConnectionId":"ihcZXEvH-vrmbeUbqkah4A"<br />
                                        }
                                    </code>
                                </div>

                                <hr />

                                <h3 class="mt-2 mb-2 heading">Receiving Messages</h3>
                                <p class="text-sans-serif pb_font-16">Clients have their own channel: <samp>ClientChannel</samp> under their own hub <samp>ClientHub</samp>. Currently, the only main usage for the <samp>ClientChannel</samp> is tracing the changes that occurs to a new SOS request, from being Pending until being Accepted, or Canceled by the client.</p>
                                <p class="text-sans-serif pb_font-16">Messages received on this channel are in the form of JSON strings that can be easily parsed to a JSON Object and extract different fields from it.</p>
                                <p class="text-sans-serif pb_font-16">Here is how a sample message is supposed to look like:</p>
                                <div class="alert alert-secondary pb_font-16">
                                    <code>
                                        {<br />
                                        &nbsp;"requestId":82,<br />
                                        &nbsp;"requestState":"Pending"<br />
                                        }
                                    </code>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <h2 id="personnel_docs">Personnel Hub</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg">
                        <div class="media pb_feature-v2 text-left mb-1 mt-1">
                            <div class="media-body">
                                <h3 class="mt-2 mb-2 heading">Listening to Messages</h3>
                                <p class="text-sans-serif pb_font-16">There is only one channel to get notifications about changes to the SOS tables: </p>
                                <ul class="text-sans-serif pb_font-16">
                                    <li><samp>PersonnelChannel</samp></li>
                                </ul>

                                <hr />


                                <h3 class="mt-2 mb-2 heading">Receiving Messages</h3>
                                <p class="text-sans-serif pb_font-16">Messages received on this channel are in the form of JSON strings that can be easily parsed to a JSON Object and extract different fields from it.</p>
                                <p class="text-sans-serif pb_font-16">Here is how a sample message is supposed to look like:</p>
                                <div class="alert alert-secondary pb_font-16">
                                    <code>
                                        {<br />
                                        &nbsp;"requestId":82,<br />
                                        &nbsp;"requestState":"Pending"<br />
                                        }
                                    </code>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script src="~/js/realtime_client.js" type="module"></script>
}